package com.cts.project.bookkeeping.entities;

import java.time.LocalDate;

import org.hibernate.annotations.GenericGenerator;

import com.fasterxml.jackson.annotation.JsonIgnore;

import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToOne;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.PastOrPresent;
import jakarta.validation.constraints.Size;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Getter
@Setter
@NoArgsConstructor
@ToString
@Entity
public class Journal {

	@Id
	@GenericGenerator(name = "journal_id", strategy = "com.cts.project.bookkeeping.generator.JournalIdGenerator")
    @GeneratedValue(generator = "journal_id") 
	@Size(max = 8)
	private String journalId;
	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="userId")
	@NotNull
	private Users user;
	
	@NotNull
	@PastOrPresent
	private LocalDate date;
	
	@JsonIgnore
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="accountId")
	@NotNull
	private Account account;
	
	@NotNull
	@Size(min = 2, max = 50)
	private String reference;
	
	@Size(max = 100)
	private String description;
	
	@JsonIgnore
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="invoiceId")
	private Invoice invoice;
	
	@JsonIgnore
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="vendorId")
	private Vendors vendor;
	
	@JsonIgnore
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="customerId")
	private Customers customer;
	
	private double debit;
	
	private double credit;
	
	@OneToOne(fetch=FetchType.LAZY, mappedBy="journal")
	private Ledger ledger;
	
	public Journal( LocalDate date, String reference, String description,double debit, double credit) {
		super();
		this.date = date;
		this.reference = reference;
		this.description = description;
		this.debit = debit;
		this.credit = credit;
	}
	
} 
