package com.cts.project.bookkeeping.entities;

import java.util.List;

import org.hibernate.annotations.GenericGenerator;

import com.cts.project.bookkeeping.model.AccountType;
import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Getter
@Setter
@NoArgsConstructor
@ToString
@Entity
public class Account {
	@Id
	@GenericGenerator(name = "account_id", strategy = "com.cts.project.bookkeeping.generator.AccountIdGenerator")
    @GeneratedValue(generator = "account_id")  
	@Size(max=8)
	private String accountId;
	
	@JsonBackReference
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="userId")
	@NotNull
	private Users user;
	
	@NotNull
	@Size(min = 2, max = 25)
	private String accountName;
	
	@NotNull
	@Enumerated(EnumType.STRING)
	private AccountType type;
	
	@NotNull
	private double balance;
	
	
	@OneToMany(mappedBy = "account")
	private List<Journal> journalList;
	
	
	@OneToMany(mappedBy = "account")
	private List<Ledger> ledgerList;
	
	public Account(String accountName,AccountType type, double balance) {
		super();
		this.accountName = accountName;
		this.type = type;
		this.balance = balance;
	}

}
