package com.cts.project.bookkeeping.entities;

import java.time.LocalDate;
import java.util.List;


import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;

import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.validation.constraints.FutureOrPresent;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.PastOrPresent;
import jakarta.validation.constraints.Size;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Getter
@Setter
@NoArgsConstructor
@ToString
@Entity
public class Invoice {

	@Id
	@Size(max=8)
	private String invoiceId;
	
	@JsonBackReference
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="userId")
	@NotNull
	private Users user;
	
	@NotNull
	@PastOrPresent
	private LocalDate invoiceDate;
	
	@NotNull
	@FutureOrPresent
	private LocalDate dueDate;
	
	@NotNull
	@Size(min=2, max = 50)
	private String billedBy;
	
	@NotNull
	@Size(min=2, max = 50)
	private String billedTo;
	
	private double taxPercentage;
	
	@NotNull
	private double totalAmount;
	
	private boolean paid;
	
	@JsonIgnore
	@OneToMany(mappedBy = "invoice")
	private List<Journal> journalList;
	

	public Invoice(String invoiceId, Users user, LocalDate invoiceDate, LocalDate dueDate, String billedBy, String billedTo, double taxPercentage, double totalAmount, boolean paid) {
		super();
		this.user = user;
		this.invoiceId = invoiceId;
		this.invoiceDate = invoiceDate;
		this.dueDate = dueDate;
		this.billedBy = billedBy;
		this.billedTo = billedTo;
		this.taxPercentage = taxPercentage;
		this.totalAmount = totalAmount;
		this.paid = paid;

	}

	
}
