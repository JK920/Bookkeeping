package com.dao;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.entities.Account;
import com.entities.BankTransaction;
import com.exception.InvalidAccountException;
import com.exception.InvalidBankTransactionException;
import com.repository.AccountRepository;
import com.repository.TransactionRepository;

//Provide necessary Annotation
@Component
public class TransactionDAOImpl implements ITransactionDAO {
	
	//Provide code to Inject TransactionRepository and AccountRepository
	//Provide code to Inject AccountRepository, if needed
	@Autowired
	TransactionRepository tRepo;
	
	@Autowired
	AccountRepository aRepo;
	
	@Override
	public BankTransaction insertTransaction(BankTransaction transactionObj,String accountNumber) throws InvalidBankTransactionException{
		
		//fill code
		Optional<Account> accountObj = aRepo.findById(accountNumber);
		if(accountObj.isPresent()){
			Account acc = accountObj.get();
			if(transactionObj.getTransactionType().equals("Deposit")) {
				acc.setBalanceAmount(acc.getBalanceAmount()+transactionObj.getAmount());
			}
			else {
				acc.setBalanceAmount(acc.getBalanceAmount()-transactionObj.getAmount());
			}
			transactionObj.setAccountObj(acc);
			return tRepo.save(transactionObj);
		}
		else
			throw new InvalidBankTransactionException();
	}
	
	@Override
	public List<BankTransaction> viewTransactionByAccountNumber(String accountNumber) throws InvalidBankTransactionException
	{
		//fill code
		
		return null;	
	}
	
	@Override
	public List<BankTransaction> viewTransactionByTransactionType(String transactionType)
	{
		//fill code
		
		return null;	
	}
	
	@Override
	public List<BankTransaction> viewTransactionByTransactionTypeAndAmount(String transactionType,double amount)
	{
		//fill code
		
		return null;	
	}

}
